|lab3
ALUctrl[0] => one_bit_ALU:G1:0:G2:stage1.ALUctrl[0]
ALUctrl[0] => one_bit_ALU:G1:1:G3:stage2.ALUctrl[0]
ALUctrl[0] => one_bit_ALU:G1:2:G3:stage2.ALUctrl[0]
ALUctrl[0] => one_bit_ALU:G1:3:G3:stage2.ALUctrl[0]
ALUctrl[0] => one_bit_ALU:G1:4:G3:stage2.ALUctrl[0]
ALUctrl[0] => one_bit_ALU:G1:5:G3:stage2.ALUctrl[0]
ALUctrl[0] => one_bit_ALU:G1:6:G4:stage3.ALUctrl[0]
ALUctrl[1] => sign.IN0
ALUctrl[1] => one_bit_ALU:G1:0:G2:stage1.ALUctrl[1]
ALUctrl[1] => one_bit_ALU:G1:1:G3:stage2.ALUctrl[1]
ALUctrl[1] => one_bit_ALU:G1:2:G3:stage2.ALUctrl[1]
ALUctrl[1] => one_bit_ALU:G1:3:G3:stage2.ALUctrl[1]
ALUctrl[1] => one_bit_ALU:G1:4:G3:stage2.ALUctrl[1]
ALUctrl[1] => one_bit_ALU:G1:5:G3:stage2.ALUctrl[1]
ALUctrl[1] => one_bit_ALU:G1:6:G4:stage3.ALUctrl[1]
ALUctrl[2] => sign.IN1
ALUctrl[2] => one_bit_ALU:G1:0:G2:stage1.ALUctrl[2]
ALUctrl[2] => one_bit_ALU:G1:1:G3:stage2.ALUctrl[2]
ALUctrl[2] => one_bit_ALU:G1:2:G3:stage2.ALUctrl[2]
ALUctrl[2] => one_bit_ALU:G1:3:G3:stage2.ALUctrl[2]
ALUctrl[2] => one_bit_ALU:G1:4:G3:stage2.ALUctrl[2]
ALUctrl[2] => one_bit_ALU:G1:5:G3:stage2.ALUctrl[2]
ALUctrl[2] => one_bit_ALU:G1:6:G4:stage3.ALUctrl[2]
ALUctrl[3] => one_bit_ALU:G1:0:G2:stage1.ALUctrl[3]
ALUctrl[3] => one_bit_ALU:G1:1:G3:stage2.ALUctrl[3]
ALUctrl[3] => one_bit_ALU:G1:2:G3:stage2.ALUctrl[3]
ALUctrl[3] => one_bit_ALU:G1:3:G3:stage2.ALUctrl[3]
ALUctrl[3] => one_bit_ALU:G1:4:G3:stage2.ALUctrl[3]
ALUctrl[3] => one_bit_ALU:G1:5:G3:stage2.ALUctrl[3]
ALUctrl[3] => one_bit_ALU:G1:6:G4:stage3.ALUctrl[3]
A[0] => one_bit_ALU:G1:0:G2:stage1.A
A[1] => one_bit_ALU:G1:1:G3:stage2.A
A[2] => one_bit_ALU:G1:2:G3:stage2.A
A[3] => one_bit_ALU:G1:3:G3:stage2.A
A[4] => one_bit_ALU:G1:4:G3:stage2.A
A[5] => one_bit_ALU:G1:5:G3:stage2.A
A[6] => one_bit_ALU:G1:6:G4:stage3.A
B[0] => one_bit_ALU:G1:0:G2:stage1.B
B[1] => one_bit_ALU:G1:1:G3:stage2.B
B[2] => one_bit_ALU:G1:2:G3:stage2.B
B[3] => one_bit_ALU:G1:3:G3:stage2.B
B[4] => one_bit_ALU:G1:4:G3:stage2.B
B[5] => one_bit_ALU:G1:5:G3:stage2.B
B[6] => one_bit_ALU:G1:6:G4:stage3.B
out1 << lab1_2:output.a1
out2 << lab1_2:output.b1
out3 << lab1_2:output.c1
out4 << lab1_2:output.d1
out5 << lab1_2:output.e1
out6 << lab1_2:output.f1
out7 << lab1_2:output.g1
out8 << lab1_2:output.a
out9 << lab1_2:output.b
out10 << lab1_2:output.c
out11 << lab1_2:output.d
out12 << lab1_2:output.e
out13 << lab1_2:output.f
out14 << lab1_2:output.g


|lab3|one_bit_ALU:\G1:0:G2:stage1
ALUctrl[0] => mux4to1:mux4_1.s[0]
ALUctrl[1] => mux4to1:mux4_1.s[1]
ALUctrl[2] => mux2to1:mux2_2.s
ALUctrl[3] => mux2to1:mux2_1.s
A => mux2to1:mux2_1.input[0]
A => mux2to1:mux2_1.input[1]
B => mux2to1:mux2_2.input[0]
B => mux2to1:mux2_2.input[1]
less => mux4to1:mux4_1.input[3]
carryin => fulladder2:add1.cin
result <= mux4to1:mux4_1.f
set <= fulladder2:add1.s
carryout <= fulladder2:add1.cout


|lab3|one_bit_ALU:\G1:0:G2:stage1|mux2to1:mux2_1
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:0:G2:stage1|mux2to1:mux2_2
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:0:G2:stage1|fulladder2:add1
cin => s.IN1
cin => cout.IN0
cin => cout.IN0
x => s.IN0
x => cout.IN0
x => cout.IN1
y => s.IN1
y => cout.IN1
y => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:0:G2:stage1|mux4to1:mux4_1
input[0] => Mux0.IN3
input[1] => Mux0.IN2
input[2] => Mux0.IN1
input[3] => Mux0.IN0
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:1:G3:stage2
ALUctrl[0] => mux4to1:mux4_1.s[0]
ALUctrl[1] => mux4to1:mux4_1.s[1]
ALUctrl[2] => mux2to1:mux2_2.s
ALUctrl[3] => mux2to1:mux2_1.s
A => mux2to1:mux2_1.input[0]
A => mux2to1:mux2_1.input[1]
B => mux2to1:mux2_2.input[0]
B => mux2to1:mux2_2.input[1]
less => mux4to1:mux4_1.input[3]
carryin => fulladder2:add1.cin
result <= mux4to1:mux4_1.f
set <= fulladder2:add1.s
carryout <= fulladder2:add1.cout


|lab3|one_bit_ALU:\G1:1:G3:stage2|mux2to1:mux2_1
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:1:G3:stage2|mux2to1:mux2_2
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:1:G3:stage2|fulladder2:add1
cin => s.IN1
cin => cout.IN0
cin => cout.IN0
x => s.IN0
x => cout.IN0
x => cout.IN1
y => s.IN1
y => cout.IN1
y => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:1:G3:stage2|mux4to1:mux4_1
input[0] => Mux0.IN3
input[1] => Mux0.IN2
input[2] => Mux0.IN1
input[3] => Mux0.IN0
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:2:G3:stage2
ALUctrl[0] => mux4to1:mux4_1.s[0]
ALUctrl[1] => mux4to1:mux4_1.s[1]
ALUctrl[2] => mux2to1:mux2_2.s
ALUctrl[3] => mux2to1:mux2_1.s
A => mux2to1:mux2_1.input[0]
A => mux2to1:mux2_1.input[1]
B => mux2to1:mux2_2.input[0]
B => mux2to1:mux2_2.input[1]
less => mux4to1:mux4_1.input[3]
carryin => fulladder2:add1.cin
result <= mux4to1:mux4_1.f
set <= fulladder2:add1.s
carryout <= fulladder2:add1.cout


|lab3|one_bit_ALU:\G1:2:G3:stage2|mux2to1:mux2_1
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:2:G3:stage2|mux2to1:mux2_2
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:2:G3:stage2|fulladder2:add1
cin => s.IN1
cin => cout.IN0
cin => cout.IN0
x => s.IN0
x => cout.IN0
x => cout.IN1
y => s.IN1
y => cout.IN1
y => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:2:G3:stage2|mux4to1:mux4_1
input[0] => Mux0.IN3
input[1] => Mux0.IN2
input[2] => Mux0.IN1
input[3] => Mux0.IN0
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:3:G3:stage2
ALUctrl[0] => mux4to1:mux4_1.s[0]
ALUctrl[1] => mux4to1:mux4_1.s[1]
ALUctrl[2] => mux2to1:mux2_2.s
ALUctrl[3] => mux2to1:mux2_1.s
A => mux2to1:mux2_1.input[0]
A => mux2to1:mux2_1.input[1]
B => mux2to1:mux2_2.input[0]
B => mux2to1:mux2_2.input[1]
less => mux4to1:mux4_1.input[3]
carryin => fulladder2:add1.cin
result <= mux4to1:mux4_1.f
set <= fulladder2:add1.s
carryout <= fulladder2:add1.cout


|lab3|one_bit_ALU:\G1:3:G3:stage2|mux2to1:mux2_1
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:3:G3:stage2|mux2to1:mux2_2
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:3:G3:stage2|fulladder2:add1
cin => s.IN1
cin => cout.IN0
cin => cout.IN0
x => s.IN0
x => cout.IN0
x => cout.IN1
y => s.IN1
y => cout.IN1
y => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:3:G3:stage2|mux4to1:mux4_1
input[0] => Mux0.IN3
input[1] => Mux0.IN2
input[2] => Mux0.IN1
input[3] => Mux0.IN0
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:4:G3:stage2
ALUctrl[0] => mux4to1:mux4_1.s[0]
ALUctrl[1] => mux4to1:mux4_1.s[1]
ALUctrl[2] => mux2to1:mux2_2.s
ALUctrl[3] => mux2to1:mux2_1.s
A => mux2to1:mux2_1.input[0]
A => mux2to1:mux2_1.input[1]
B => mux2to1:mux2_2.input[0]
B => mux2to1:mux2_2.input[1]
less => mux4to1:mux4_1.input[3]
carryin => fulladder2:add1.cin
result <= mux4to1:mux4_1.f
set <= fulladder2:add1.s
carryout <= fulladder2:add1.cout


|lab3|one_bit_ALU:\G1:4:G3:stage2|mux2to1:mux2_1
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:4:G3:stage2|mux2to1:mux2_2
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:4:G3:stage2|fulladder2:add1
cin => s.IN1
cin => cout.IN0
cin => cout.IN0
x => s.IN0
x => cout.IN0
x => cout.IN1
y => s.IN1
y => cout.IN1
y => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:4:G3:stage2|mux4to1:mux4_1
input[0] => Mux0.IN3
input[1] => Mux0.IN2
input[2] => Mux0.IN1
input[3] => Mux0.IN0
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:5:G3:stage2
ALUctrl[0] => mux4to1:mux4_1.s[0]
ALUctrl[1] => mux4to1:mux4_1.s[1]
ALUctrl[2] => mux2to1:mux2_2.s
ALUctrl[3] => mux2to1:mux2_1.s
A => mux2to1:mux2_1.input[0]
A => mux2to1:mux2_1.input[1]
B => mux2to1:mux2_2.input[0]
B => mux2to1:mux2_2.input[1]
less => mux4to1:mux4_1.input[3]
carryin => fulladder2:add1.cin
result <= mux4to1:mux4_1.f
set <= fulladder2:add1.s
carryout <= fulladder2:add1.cout


|lab3|one_bit_ALU:\G1:5:G3:stage2|mux2to1:mux2_1
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:5:G3:stage2|mux2to1:mux2_2
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:5:G3:stage2|fulladder2:add1
cin => s.IN1
cin => cout.IN0
cin => cout.IN0
x => s.IN0
x => cout.IN0
x => cout.IN1
y => s.IN1
y => cout.IN1
y => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:5:G3:stage2|mux4to1:mux4_1
input[0] => Mux0.IN3
input[1] => Mux0.IN2
input[2] => Mux0.IN1
input[3] => Mux0.IN0
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:6:G4:stage3
ALUctrl[0] => mux4to1:mux4_1.s[0]
ALUctrl[1] => mux4to1:mux4_1.s[1]
ALUctrl[2] => mux2to1:mux2_2.s
ALUctrl[3] => mux2to1:mux2_1.s
A => mux2to1:mux2_1.input[0]
A => mux2to1:mux2_1.input[1]
B => mux2to1:mux2_2.input[0]
B => mux2to1:mux2_2.input[1]
less => mux4to1:mux4_1.input[3]
carryin => fulladder2:add1.cin
result <= mux4to1:mux4_1.f
set <= fulladder2:add1.s
carryout <= fulladder2:add1.cout


|lab3|one_bit_ALU:\G1:6:G4:stage3|mux2to1:mux2_1
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:6:G4:stage3|mux2to1:mux2_2
input[0] => f.DATAB
input[1] => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:6:G4:stage3|fulladder2:add1
cin => s.IN1
cin => cout.IN0
cin => cout.IN0
x => s.IN0
x => cout.IN0
x => cout.IN1
y => s.IN1
y => cout.IN1
y => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3|one_bit_ALU:\G1:6:G4:stage3|mux4to1:mux4_1
input[0] => Mux0.IN3
input[1] => Mux0.IN2
input[2] => Mux0.IN1
input[3] => Mux0.IN0
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|lab3|lab1_2:output
w => a.IN0
w => a.IN0
w => b.IN0
w => a.IN0
w => b.IN0
w => e.IN0
w => f.IN0
x => a.IN0
x => a.IN1
x => b.IN1
x => b.IN0
x => a.IN1
x => a.IN1
x => d.IN0
x => e.IN0
y => a.IN1
y => b.IN1
y => b.IN1
y => c.IN1
y => c.IN1
y => f.IN1
y => g.IN1
y => a.IN1
y => a.IN1
y => a.IN1
y => b.IN1
y => d.IN1
y => e.IN1
z => a.IN1
z => a.IN1
z => b.IN1
z => b.IN1
z => d.IN1
z => d.IN1
z => e.IN1
z => e.IN1
z => f.IN1
z => f.IN1
z => g.IN1
z => a.IN1
z => b.IN1
z => b.IN1
z => c.IN1
z => d.IN1
z => d.IN1
w1 => a1.IN0
w1 => a1.IN0
w1 => b1.IN0
w1 => a1.IN0
w1 => b1.IN0
w1 => e1.IN0
w1 => f1.IN0
x1 => a1.IN0
x1 => a1.IN1
x1 => b1.IN1
x1 => b1.IN0
x1 => a1.IN1
x1 => a1.IN1
x1 => d1.IN0
x1 => e1.IN0
y1 => a1.IN1
y1 => b1.IN1
y1 => b1.IN1
y1 => c1.IN1
y1 => c1.IN1
y1 => f1.IN1
y1 => g1.IN1
y1 => a1.IN1
y1 => a1.IN1
y1 => a1.IN1
y1 => b1.IN1
y1 => d1.IN1
y1 => e1.IN1
z1 => a1.IN1
z1 => a1.IN1
z1 => b1.IN1
z1 => b1.IN1
z1 => d1.IN1
z1 => d1.IN1
z1 => e1.IN1
z1 => e1.IN1
z1 => f1.IN1
z1 => f1.IN1
z1 => g1.IN1
z1 => a1.IN1
z1 => b1.IN1
z1 => b1.IN1
z1 => c1.IN1
z1 => d1.IN1
z1 => d1.IN1
a <= a.DB_MAX_OUTPUT_PORT_TYPE
b <= b.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE
d <= d.DB_MAX_OUTPUT_PORT_TYPE
e <= e.DB_MAX_OUTPUT_PORT_TYPE
f <= f.DB_MAX_OUTPUT_PORT_TYPE
g <= g.DB_MAX_OUTPUT_PORT_TYPE
a1 <= a1.DB_MAX_OUTPUT_PORT_TYPE
b1 <= b1.DB_MAX_OUTPUT_PORT_TYPE
c1 <= c1.DB_MAX_OUTPUT_PORT_TYPE
d1 <= d1.DB_MAX_OUTPUT_PORT_TYPE
e1 <= e1.DB_MAX_OUTPUT_PORT_TYPE
f1 <= f1.DB_MAX_OUTPUT_PORT_TYPE
g1 <= g1.DB_MAX_OUTPUT_PORT_TYPE


